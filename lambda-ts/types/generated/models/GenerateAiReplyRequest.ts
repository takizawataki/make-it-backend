/* tslint:disable */
/* eslint-disable */
/**
 * 「make it !」REST API仕様書
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GenerateAiReplyRequestUserAgent } from './GenerateAiReplyRequestUserAgent';
import {
    GenerateAiReplyRequestUserAgentFromJSON,
    GenerateAiReplyRequestUserAgentFromJSONTyped,
    GenerateAiReplyRequestUserAgentToJSON,
} from './GenerateAiReplyRequestUserAgent';

/**
 * 
 * @export
 * @interface GenerateAiReplyRequest
 */
export interface GenerateAiReplyRequest {
    /**
     * ユーザー ID（Cognito の sub 属性）
     * @type {string}
     * @memberof GenerateAiReplyRequest
     */
    userId: string;
    /**
     * セッション ID
     * @type {string}
     * @memberof GenerateAiReplyRequest
     */
    sessionId: string;
    /**
     * ユーザーからの質問文
     * @type {string}
     * @memberof GenerateAiReplyRequest
     */
    message: string;
    /**
     * メッセージ送信日時（ISO8601 形式）
     * @type {string}
     * @memberof GenerateAiReplyRequest
     */
    dateTime: string;
    /**
     * 
     * @type {GenerateAiReplyRequestUserAgent}
     * @memberof GenerateAiReplyRequest
     */
    userAgent?: GenerateAiReplyRequestUserAgent;
}

/**
 * Check if a given object implements the GenerateAiReplyRequest interface.
 */
export function instanceOfGenerateAiReplyRequest(value: object): value is GenerateAiReplyRequest {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('sessionId' in value) || value['sessionId'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('dateTime' in value) || value['dateTime'] === undefined) return false;
    return true;
}

export function GenerateAiReplyRequestFromJSON(json: any): GenerateAiReplyRequest {
    return GenerateAiReplyRequestFromJSONTyped(json, false);
}

export function GenerateAiReplyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerateAiReplyRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['userId'],
        'sessionId': json['sessionId'],
        'message': json['message'],
        'dateTime': json['dateTime'],
        'userAgent': json['userAgent'] == null ? undefined : GenerateAiReplyRequestUserAgentFromJSON(json['userAgent']),
    };
}

export function GenerateAiReplyRequestToJSON(value?: GenerateAiReplyRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'userId': value['userId'],
        'sessionId': value['sessionId'],
        'message': value['message'],
        'dateTime': value['dateTime'],
        'userAgent': GenerateAiReplyRequestUserAgentToJSON(value['userAgent']),
    };
}

