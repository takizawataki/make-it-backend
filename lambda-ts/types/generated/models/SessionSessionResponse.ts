/* tslint:disable */
/* eslint-disable */
/**
 * 「make it !」REST API仕様書
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GenerateSessionTitleRequestSessionHistoryInner } from './GenerateSessionTitleRequestSessionHistoryInner';
import {
    GenerateSessionTitleRequestSessionHistoryInnerFromJSON,
    GenerateSessionTitleRequestSessionHistoryInnerFromJSONTyped,
    GenerateSessionTitleRequestSessionHistoryInnerToJSON,
} from './GenerateSessionTitleRequestSessionHistoryInner';

/**
 * 
 * @export
 * @interface SessionSessionResponse
 */
export interface SessionSessionResponse {
    /**
     * セッション ID
     * @type {string}
     * @memberof SessionSessionResponse
     */
    sessionId: string;
    /**
     * セッションタイトル
     * @type {string}
     * @memberof SessionSessionResponse
     */
    sessionTitle: string;
    /**
     * セッション履歴
     * @type {Array<GenerateSessionTitleRequestSessionHistoryInner>}
     * @memberof SessionSessionResponse
     */
    sessionHistory: Array<GenerateSessionTitleRequestSessionHistoryInner>;
    /**
     * 転送されたセッションかどうか
     * @type {boolean}
     * @memberof SessionSessionResponse
     */
    isEscalated: boolean;
    /**
     * メッセージ開始日時（ISO8601 形式）
     * @type {string}
     * @memberof SessionSessionResponse
     */
    createdAt: string;
    /**
     * メッセージ更新日時（ISO8601 形式）
     * @type {string}
     * @memberof SessionSessionResponse
     */
    updatedAt: string;
}

/**
 * Check if a given object implements the SessionSessionResponse interface.
 */
export function instanceOfSessionSessionResponse(value: object): value is SessionSessionResponse {
    if (!('sessionId' in value) || value['sessionId'] === undefined) return false;
    if (!('sessionTitle' in value) || value['sessionTitle'] === undefined) return false;
    if (!('sessionHistory' in value) || value['sessionHistory'] === undefined) return false;
    if (!('isEscalated' in value) || value['isEscalated'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function SessionSessionResponseFromJSON(json: any): SessionSessionResponse {
    return SessionSessionResponseFromJSONTyped(json, false);
}

export function SessionSessionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionSessionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'sessionId': json['sessionId'],
        'sessionTitle': json['sessionTitle'],
        'sessionHistory': ((json['sessionHistory'] as Array<any>).map(GenerateSessionTitleRequestSessionHistoryInnerFromJSON)),
        'isEscalated': json['isEscalated'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function SessionSessionResponseToJSON(value?: SessionSessionResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'sessionId': value['sessionId'],
        'sessionTitle': value['sessionTitle'],
        'sessionHistory': ((value['sessionHistory'] as Array<any>).map(GenerateSessionTitleRequestSessionHistoryInnerToJSON)),
        'isEscalated': value['isEscalated'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
    };
}

